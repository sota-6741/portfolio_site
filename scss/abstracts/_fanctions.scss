@use "sass:map";
@use "sass:math";
@use "./variables" as *;

/* アクセッサ関数 */
@function color($name) {
    @return map.get($tokens-color, $name);
}

@function opacity($name) {
    @return map.get($tokens-opacity, $name);
}

@function animation($name) {
    @return map.get($tokens-animation, $name);
}

@function shadow($name) {
    @return map.get($tokens-shadow, $name);
}

@function typography($name) {
    @return map.get($tokens-typography, $name);
}

@function layout($name) {
    @return map.get($tokens-layout, $name);
}

/* pxをvwに変換する関数 */
@function px-to-vw($px, $base: layout(base-width)) {
    @return math.div($px, $base) * 100vw;
}

/* pcとspのビューポート間を線型的にサイズ変化させる関数 (要検討) */
@function fluid-clamp($min-size, $max-size, $min-vw: layout(sp-width), $max-vw: layout(base-width)) {
  @return clamp(
    #{$min-size},
    calc(
      #{$min-size} + (#{$max-size} - #{$min-size}) *
      ((100vw - #{$min-vw}) / (#{$max-vw} - #{$min-vw}))
    ),
    #{$max-size}
  );
}

/* Swiperボタンの位置 */
@function swiper-button-position($device: default, $side) {
    @return map.get(map.get(layout(swiper-button-positions), $device), $side);
}

/* Swiperボタンのサイズ */
@function swiper-button-size($device: default, $property) {
     @return map.get(map.get(layout(swiper-button-sizes), $device), $property);
}
